# ===========================================
# 轻量化 Dockerfile - 仅使用必要的依赖
# ===========================================
FROM python:3.11-slim

# Add metadata labels for traceability
LABEL maintainer="xtool MCP Server Team"
LABEL version="1.0.0"
LABEL description="xtool MCP Server - AI-powered Model Context Protocol server (Lightweight)"
LABEL org.opencontainers.image.title="xtool-mcp-server"
LABEL org.opencontainers.image.description="AI-powered Model Context Protocol server with multi-provider support"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.source="https://github.com/BeehiveInnovations/xtool-mcp-server"
LABEL org.opencontainers.image.documentation="https://github.com/BeehiveInnovations/xtool-mcp-server/blob/main/README.md"
LABEL org.opencontainers.image.licenses="Apache 2.0 License"

# Create non-root user for security
RUN groupadd -r xtooluser && useradd -r -g xtooluser xtooluser

# Set working directory
WORKDIR /app

# Install system dependencies with --fix-missing
RUN apt-get update && apt-get install -y --fix-missing \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements files
COPY requirements.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY --chown=xtooluser:xtooluser . .

# Create logs directory with proper permissions
RUN mkdir -p logs && chown -R xtooluser:xtooluser logs

# Create tmp directory for container operations
RUN mkdir -p tmp && chown -R xtooluser:xtooluser tmp

# Create memory directory with proper permissions
RUN mkdir -p .xtool_memory && chown -R xtooluser:xtooluser .xtool_memory

# Copy health check script
COPY --chown=xtooluser:xtooluser docker/scripts/healthcheck.py /usr/local/bin/healthcheck.py
RUN chmod +x /usr/local/bin/healthcheck.py

# Switch to non-root user
USER xtooluser

# Health check configuration
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python /usr/local/bin/healthcheck.py

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Expose port (for debugging purposes)
EXPOSE 8000

# Default command
CMD ["python", "server.py"]